import * as constants from './constants'
import { Alert } from 'react-native'
import { printToFileAsync } from 'expo-print'
import * as Sharing from 'expo-sharing'

async function createPDF(info, vulnerabilidades) {
  const vulnerabilidades_paragraph = vulnerabilidades.map((vulnerabilidade) => {
    if (vulnerabilidade.value === "Nenhuma Vulnerabilidade")
      return
    return (
      `<div key="${vulnerabilidade.key}">
            <p>
              <b>${vulnerabilidade.value}: </b> ${constants.tipos_vulnerabilidade[vulnerabilidade.value]}
            </p>
            <p>
              <b>Resultado:
                ${vulnerabilidade.value !== info.vulnerabilidade ?
        `<span style="color: rgb(27, 177, 27);">Em conformidade</span>`
        : `<span style="color: rgb(194, 74, 27);">Vulnerável (Nível ${info.criticidade})</span>`
      }
              </b>
            </p>
            <br />
            <br />
            ${vulnerabilidade.key == 5 ?
        `
              <br />
              <br />
              <br />
              ` : ''
      }
          </div>`
    )
  }).join(' ')

  const htmlContent = constants.html_relatorio_generate(info, vulnerabilidades_paragraph)

  try {
    const { uri } = await printToFileAsync({
      html: htmlContent,
      base64: false
    })
    await Sharing.shareAsync(uri)
    Alert.alert('Relatório gerado com sucesso!')
  } catch (error: any) {
    Alert.alert('Erro ao gerar o relatório', error.message)
  }
}

export default createPDF